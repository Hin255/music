title: web应用组件化的合理划分

1. 前端应用应该仍然按照页面来划分
2. 按照页面划分后, 就应该根据每一个页面的内容划分相应的组件, 所有的组件应该存放在同一个文件夹中,目录结构应该是单层结构, 不能够组件目录嵌套组件目录, 因为一个组件和组件之间的关系是可以互相依赖并且独立的, 并没存在谁属于谁, 只是在业务模型上有从属关系, 组件之间并没有从属关系

比如一个音乐播放器组件中需要一个button组件, 但这仅是因为业务需要, button组件并不属于播放器组件

3. 页面应该是一个容器组件, 在业务上是该页面中被包含的所有组件的顶层组件, 该组件的职责,我认为
有以下几个, 一个是, 页面组件是一个容器, 起到合理化包裹的作用, 二是 : 页面组件作为一个容器, 页面组件中的子组件的数据应该均由父组件获取, 父组件负责调度这些组件并进行数据传递
4. 参数传递父组件传参应该由以上解决, 部分交互组件因为用户操作的关系需要保存相应的状态,但是这种状态在浏览器刷新后就不在存在的, (这是一个问题, 可以在用户刷新或者退出浏览器的时候保存所有组件的状态信息)

4. 所有页面应该属于一个顶层的页面组件
5. 应用所有的路由配置, 应该单独存放在一个文件中, 不应该像小程序那样在组件或者页面中跳转路由



